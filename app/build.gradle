apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'


android {
    compileSdkVersion 34
    buildToolsVersion "30.0.3"
    buildFeatures {
        compose true
        viewBinding true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.1"
    }
    defaultConfig {
        applicationId "com.kot"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.kot.CustomTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation platform('androidx.compose:compose-bom:2023.03.00')
    implementation 'androidx.compose.material3:material3-android:1.2.0'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.activity:activity:1.8.0'


    // For Robolectric tests.
    testImplementation("com.google.dagger:hilt-android-testing:2.44")
    androidTestImplementation platform('androidx.compose:compose-bom:2023.03.00')
    // ...with Kotlin.
    kaptTest("com.google.dagger:hilt-android-compiler:2.44")
    // ...with Java.
    testAnnotationProcessor("com.google.dagger:hilt-android-compiler:2.44")

    // For instrumented tests.
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.44")
    // ...with Kotlin.
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.44")
    // ...with Java.
    androidTestAnnotationProcessor("com.google.dagger:hilt-android-compiler:2.44")

    // Local Unit Tests
    testImplementation "junit:junit:4.13.2"
    testImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation "androidx.test:core:1.5.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

    //mockk
    testImplementation "io.mockk:mockk:1.12.2"
    androidTestImplementation "io.mockk:mockk-android:1.12.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    testImplementation "org.robolectric:robolectric:4.9"
    testImplementation 'org.hamcrest:hamcrest:2.2'

    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
    androidTestImplementation(platform("androidx.compose:compose-bom:2023.03.00"))
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    implementation("com.alibaba:fastjson:1.1.71.android")


    implementation project(path: ':androidUtil')
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'


    implementation 'com.airbnb.android:lottie:3.4.0'
//    implementation 'com.google.android.material:material:1.6.1'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.preference:preference:1.2.0'


    // Compose
    def lifecycle_version = "2.7.0"

    implementation("androidx.core:core-ktx:1.10.1")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    implementation("androidx.activity:activity-compose:1.7.2")
    implementation(platform("androidx.compose:compose-bom:2024.02.01"))
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.ui:ui-graphics")
    implementation("androidx.compose.ui:ui-tooling-preview")
    testImplementation("junit:junit:4.13.2")


    debugImplementation("androidx.compose.ui:ui-tooling")
    debugImplementation("androidx.compose.ui:ui-test-manifest")


}

task testGrdele {
    println("testGrdele")
}

//闭包的概念, 像kotlin匿名函数
task closure {
    mEach {
        println it
    }

    mEachWithParams { m, n ->//  -> 将闭包的参数和主体分离开
        println "${m} is ${n}"
    }
}

def mEach(closure) {
    for (int i in 1..5) {
        closure(i)
    }
}

def mEachWithParams(closure) {
    def map = ['name': 'groovy', 'age': 10]
    map.each {
        closure(it.key, it.value)
    }
}


//new Throwable().printStackTrace()
//println(getClass())
//println(getClass().superclass)
