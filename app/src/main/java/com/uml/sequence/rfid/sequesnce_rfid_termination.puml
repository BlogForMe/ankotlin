@startuml
'https://plantuml.com/sequence-diagram

title: RFID  - termination

actor USER as "User"
participant APP as "App"
participant UAPSDK as "UAP SDK"
participant MPAAS as "App Server"
participant TNG as "TNG Server"

== RFID Tag List Screen==
autonumber 5.0.0
USER -> APP: Click Terminate Now CTA
USER <-- APP: show termination screen

== Close terminate screen ==
APP -> MPAAS: RPC: <i>{com.abl.wallet.balance.reminder}</i>\nRequest: {WalletReminder}
APP <-- MPAAS: RPC: <i>{com.abl.wallet.balance.reminder}</i>\nResponse: {WalletReminder}
alt #lightyellow resultStatus == 1002
    USER <-- APP: Show rate limit in popup screen
    USER -> APP: Click ok button in popup
    USER <-- APP: Close terminate screen
else #pink statusCode != '00'
    USER <-- APP: Show error popup
    USER -> APP: Click ok button in popup
    USER <-- APP: Close terminate screen
else #lightyellow hasPendingTollPayment = true
    USER <-- APP: Show You have\n pending payments Dialog
    USER -> APP: Click ok button in popup
    USER <-- APP: Close terminate screen
else #white hasPendingTollPayment=false
    APP -> MPAAS: RPC: <i>{com.abl.wallet.rfid.tag.terminate.reason.list}</i>\nRequest: {GetTerminateReasonList}
    MPAAS -> TNG: get tag termination reasons
    MPAAS <-- TNG: return result
    APP <-- MPAAS: RPC: <i>{com.abl.wallet.rfid.tag.terminate.reason.list}</i>\nResponse: {GetTerminateReasonList}
        alt #lightyellow resultStatus == 1002
            USER <-- APP: Show rate limit in popup screen
            USER -> APP: Click ok button in popup
            USER <-- APP: Close terminate screen
        else #pink statusCode != '00'
            USER <-- APP: Show error popup
            USER -> APP: Click ok button in popup
            USER <-- APP: Close terminate screen
        else statusCode =="00"
        APP -> APP: get reason list
        end
end

'newpage user operate in termination page

USER ->  APP: Click Reason for Termination
USER <-- APP: Show termination reasons Dialog
USER -> APP : Click one of item in termination reasons
alt #lightyellow reasons == other
    USER <-- APP: fill reason for termination  \n show Remarks input textview
else #white otherwise
end

USER -> APP: click Submit CTA
APP  -> APP: check reason is empty
alt #lightyellow  reason input textview is empty
    USER <-- APP: show what????
end

APP -> APP: check item reasons
alt #lightyellow reasons == other
    APP -> APP: check Remarks input text is empty
else #white otherwise
end

'newpage risk verify

USER <-- APP: Show Would you like continue Dialog
USER -> APP: Click YES/No
alt #lightyellow  No
    USER <-- APP: dismiss current Dialog
    else  #white click YES
    alt #f1f8e9 Face Verification enabled
        APP -> UAPSDK: SecVIEngine.envDataWithOption()\nParameters {option:'SecVIEnvOptionZolozBio'}
        APP <-- UAPSDK: return metaInfo
        APP -> MPAAS: RPC: <i>{ap.tngdwallet.biz.basics.risk.init.verify}</i>\nRequest: {RiskInitVerifyRequest}\nParameters {metaInfo,sceneType='RFID_TAG_TERMINATION'}
    else #dcedc8 Face Verification disabled
        APP -> MPAAS: RPC: <i>{ap.tngdwallet.biz.basics.risk.init.verify}</i>\nRequest: {RiskInitVerifyRequest}\nParameters {sceneType='RFID_TAG_TERMINATION'}
    end
        APP <-- MPAAS: RPC: <i>{ap.tngdwallet.biz.basics.risk.init.verify}</i>\nResponse: {RiskInitVerifyResponse}\nParameters: {verifiedId:'？？？'}
    alt #lightyellow resultStatus == 1002
        USER <-- APP: Show rate limit in popup screen
    else #white verifiedId isNotEmpty
        APP -> UAPSDK: SecVIEngine.verify()\nParameters {verifyId:'？？？'}
        USER <-- UAPSDK: Show risk product screen (example: face verification/6 digits pin/SMS OTP)
        USER -> UAPSDK: Answer risk product
        UAPSDK -> MPAAS: verification request
        UAPSDK <-- MPAAS: return verification result
        APP <-- UAPSDK: callback
    end
        APP -> MPAAS: RPC: <i>{com.abl.wallet.tngcard.consentUpdate}</i>\nRequest: {ConsentUpdateRequest}\nParameters {tollAutoDeductConsent=true,tngCardDataSharingConsent=true}
        APP <-- MPAAS: RPC: <i>{com.abl.wallet.tngcard.consentUpdate}</i>\nResponse: {ConsentUpdateResponse}
        APP -> MPAAS: RPC: <i>{com.abl.wallet.rfid.tag.terminate}</i>\nRequest: {Terminate}\nParameters: {bizSecurityId='？？？'}
        APP <-- MPAAS: RPC: <i>{com.abl.wallet.rfid.tag.terminate}</i>\nResponse: {Terminate}\nParameters: {statusCode='00',message: 'APPROVED / OK}
    alt #lightyellow resultStatus == 1002
        USER <-- APP: Show rate limit in popup screen
    else #white statusCode == "00"
        USER <-- APP: Show Processing termination...
    else #pink statusCode != '00'
        USER -> APP: Show fail page
    end
end


@enduml